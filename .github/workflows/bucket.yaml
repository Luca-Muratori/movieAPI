name: bucket for movieApi

on:
    push:
        branches: [main]
        paths:
            - "terraform/modules/bucket/**"
    pull_request:
        branches: [main]
        paths:
            - "terraform/modules/bucket/**"

permissions:
    pull-requests: write
    contents: read

jobs:
    bucket:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terrsform
        steps:
            - name: set up github
              uses: actions/checkout@v3
            - name: set up terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: latest
                terraform_wrapper: false
            - name: configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: 'eu-central-1'
            - name: init
              run: terraform init
            - name: validate
              run: terraform validate
            - name: plan
              if: github.event_name == 'pull request'
              run: terraform plan -no-color -input=false
              continue-on-error: true
            - uses: actions/github-script@v6
              if: github.event_name == 'pull_request'
              env:
                PLAN: "terraform\n${{steps.plan.outputs.stdout}}"
              with:
                script: |
                    const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                    #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                    #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                    #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
                    <details><summary>Show Plan</summary>
                    \`\`\`\n
                    ${process.env.PLAN}
                    \`\`\`
                    </details>
                    *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
                    github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                    })

            - name: terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1
            - name: terraform apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false
            